%!PS-Adobe-2.0 EPSF-1.2
%%Title: UNTITLED-9
%%Creator: FreeHand 7.0
%%CreationDate: Tue Jun 10 17:56:54 1997 
%%BoundingBox: 0 0 42 64
%%FHPathName:F:\computek graphics\fonts\Eps\UNTITLED-9
%ALDOriginalFile:F:\computek graphics\fonts\Eps\UNTITLED-9
%ALDBoundingBox: -285 -363 327 429
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t=<u^::f"!!!u&!!3-(<,$2\ErZ1?!!iQH0f_6Q#?*d1
%:!!!Ju!!"W22`EWS2)R3K3?U%:2`Uj</i5OC0JYL?1c@2k!!N?7!!#]$F*'fg@od;TG=,qZFCd];EWH.C!":P62_m-B0f:aH0LQI4!WWB(&@hj@@ps1b!WWu9.f]P]>QA"/;ZK5d;?0`r!+,^r3<0%E5la^]8,u3]6TG0P!)ET1!"]-E!$F-!9E6XE1]T610E<X(5Ql9c!H%mY!,qpV!,hjR56+FY6igjX!AFL7!!!*$$?p3%QorS-
%::i^8n#s\Ik"98N($Y3gi@rc:&FD5Z2&RYS=*WQ1b!!<3$83[:Y!!:jU./s8JiW%m=q#X"f7Kk1Bqu?cu!/3.c!S@H%!(d<(!!!$"!!<3$!<_L>!PlW@!<rO3#QP_CO<+B%3s\Ph@oE_4ARGXN!rt%V:f'PLBl%?U@;Rn8!rrlt"oqC_%<;Gc!+@_p"98s2ATS1lFD5W*T`P8q#B4Wm9`P/T$3r?eJ2oD@0fC]c!';#bF`VYC-(tU[
%:D,UjP@rc-l4:VJo!rrWj!ho]!!"%$WBdNo^H8uZ>!'(<L*EZobE^k1h4UF[c71W'N!H\<`1B;GU"pJsSE+^6n!(@0T(T.6=!#l(As8N-#fb-:Y"98m+ATpXe7:9gi),OaS1CjIA!<FnT!<=/@+TNVJ!!3-Z(dA*C!!!]5%fct;'EA+;>J^sP!'LH),R0b>!$!No0ED.n1]fr]"NUQ_49HE$!$"?+!'LE(9EG1q*,u%1!#tt=FQB4l
%:*.2f0KMqsS*/OY<!",f`2$XHi!7Wq4%fcY21Cn,0Erc7N!"L+O!"Ju/,6/nf)?:WT(]Y?P(*G"*'fQF4!"o8D!"],1%mL((!">U14UMNR('jmF59'he)$<#8#lk/o!QQ6(/Of_>1DY3q('=O=1H.Wb+(5.Z5;5_J-igCe(_mbu&c_qo"9:4X/H>c2&./Cd_5&ph8HK%q5lbp[1I38d0b+9c0er_1,f's&1H5@EIi/_A577PnIn>NG
%:+oiYa*]"6*8HJu;!%%[G(#oAr($Yl$(%MD+&o7Uaq#LI2"9SW>$NL/k#8T69!<<lT!##>5)4:I)(*ik\J,fQb.f]Q22?F."1]RO<Ai0TO!!(6e2#p#E!(a6-!!!d.>7(?G<-81G!rs*>*&Re5!rsbM(3Fs*KED2iMuit\(6JSE!!3oM<4MuY1B>6G5l_\MG66P%!#B,S!Z"0(nGiOj(F_R:"TT*5AU&;bAS(qX@<HC.6$.3hAoY\3
%:=<0O:#\[X_Aoo<6Df/l0!%A$N"5PaB"98K'#'4m,+>7YK:B:Ls"D2@aC]XS=0cnFV9,9AqXbAi01B7D1;+sb(!BUTM;ueQO/hm_K2^?Z=2[f'i('F^>+Vb;4'EB9j!/V@<&i;O78J4sDH"(%<_+b;#*^:f-!&l\[!\jZU!7Cj)!'(Mh;#ph^!Cg3cAH6@)-uT*.!,_dI2(^Km$32@Q"?fCrCh-4JH"D#2:]LK*(b%3SQ*i1r0jh-,
%:#XJGB/eC6!/t5*b/r_JM5;=`B&48HE">Kn4$=bGO!&=NS1B9T=4TIT/GA$sV'*nU=!<<'$!!gjnYQqr?Ad@!H!'NlkHTsOs!7*qa&tDHF&hQZ3&kN(!&eY0E+BAIA!rrSUTWe['IhK@H'":Le&hQf7&eIkB!)6<(&HDh2rrN0&4"((J#K#riFq]Q0FT;D$!D=ek'nlWF!([,a(9)Xm<#:5gs/IpV8-)Hf2ult_K`Et1!WXZ"p2R?@
%:W)"cX/Pu0Y;-+SG%K?D.s8N-#[i!@E'i#Er!&XaB'hfB&!*g:n!:TnE!([,W)T[(TK`Et18-)0_2um"sK`Et1!WXSbW)KWA-Q"F7f,.Lf(_6THs8N0$#MhEp3@Y8[N8c]r="XaY0+t3b0+oj=h\$"k=ZN`FHiO.#o`+pm!)Jj[#m\"!'0[gu!/1CQ3!%%W+8W2Hg--s>!-J9t!CHrS!JLM2!!3-O(8tFg(+idas83X<>S[bKH7\=(
%:!<<'#!.5PW&k+:(!-J9-'h9*jlC0mOK`H5qL]KjF5QQQ=2#m[X//G0k//BgFg_O=Np0&4?!!*'!!ru:O57q7$L+*-'$8]h=l2^um!+Gq7!*Td2NO]$pSRb_i1"nJg@fQL:$jnf5MZ[Mj<WH"t:&mmF\.8RP!.Dn)!!#"\2ZlF?U%/4]"UtH'c2ag93s&'k!WW:PW:^,js8P*.%UQe:A8--QDeq.jDfPgXUC(c:C-V(d!!WErh3MCr
%:!bhWr57NKa:$Vu`7m"S%42PP/D:o'mDZp.@rrN2V?V^mN$#gFU!:L+X#QQ[%!'^R*5KH&$2p+MY!<DPm9`tt,mfR\6!&rUr"*=MC"TSNqc9_M>>Pe5NbK^=m@0CEN7h9kH!'(]K"F'oj!(R%s58$94$3C4/!."Wg3=eUs#64i`$V*5,AMGDp_/95Q!s!]K!0@3]9*5.o#67Bs!;/Wl!!!"#!GrNH1BV&I%VI^&!s!fMs%iI(kW]6)
%:e56GN2'G%pB`L.!!*922"%?:-0cFsn#m10Wepmf$!!$j>4V%Mm=TCek5l^lb">L0V2%W1\DE%InF>j1i"G08I0`YDZ0clMc0`_=U2#ol5!(/C\!-pd1DEe.blN.#q#lk#,T*YMu3s&%o$GZg,&8MoP!/1E*!.b-"!.>+Q#6t7b-VjdD!!54g:]+!,!&+Q+<WN4#s+LGa!!3-A>ual)<tL&cK`F%/.]QSO!JLMr!!*)"3!'&OmZ_IH
%:!<@fRK`G$R;AV+kK`G*Q!<?,"BE3_dK`Eb4$>p6<%fub2rrN0%3Y85!(]XR9s/N+o$\\S7!!*)knSK.)$3U?g!!!!d!^[6J!/1Cj!!"2M&HDdq2[JJt8HjeJ70#f_!WZu864*\m,PPaLZ!H2iAH2]1l8SeF!(?l\!pZfcs1(l+!,=InTD;23Z!Bs/9*8`*4UXgbBa.33M$H!e"p"]'!WZp2!\j^G'F%_gs8OQ($;VLm!+c-3$DEI2
%:!$DCEK`JIGK`D*?"(2`kX+^OB!&t,d!%\<T!WW3i!rr>-q^_q3#mUI#"pk9&%;Hc6&;:+<!!!"4!.[$;7hbq$K`F^[4X!'D!!#&2!W[oS!!$+$1BN71K`D)Q!^Rk,qZ$VM!/1CQ!&F[W)MJ0F!!!!Y!!3.S!/1CQ<s_4rs3F1BK`FOA!!#7b!<@fRK`Ek`"p"]'!W_@=L'!&/s.=uF!!$[4V@\^e!<@]XK`Hf,!!#@f64&>Gh\$@(
%:K`D)QqZ'.e!<@fRK`F5K#;H2\!0$u;!/gi7!!a<s!/LW1"9:n85l^lb)#sXE!!#Vn5la.K!!#Fg5la1N1j(ib:0dl#0S\<_:B<`]70>gU!,ql;0*)>g"UG).9`dT\0H^>q9L2;O5lb<p7fYgT5lbuF!'4p^!2fht!'p`Z#"Jb]!!!!i!!!?f%Y+Ok>Q=bk!1*\O!0mPK!0[DG.LH0<4)L$5$k,7UAH6?CBeXOK=DW)SO#[2YBBH1@
%:5&:<$RKF-`3_'>Ws8N'!Ba"_A7WVOI=#u7R0PP(u!!<4k"93EE!2BWd!'pT>!.^`FQCn5K!%@o;$ilkR!LWqJ!/;UI!.-D`3WM#;2?5$/!##D66OB@b@+cea"p"]@!!*&u#67LZ#sf+2!!6[gF5#\8!X&KH0b@b0/H>b`!!#S2!!!$N!!#7a#QQt"R=YM@+opX'!WW0hBl%>]!+B>QAH3r"!!!*$!DPsr@rq_P!)ler!C/nD&s2o9
%:Nr_sKBle@r!HVWa?82IPK)n\FFE2)5B/(/&!FneA#7*:`:18!8&caE^!EO1C1'BuKRK*N,!)Wk!!1Nrh7S#pc@n:0>A7]f"`A7Yt5]^FF$"e!i"(hXV6UPoa$(Nm["sS"^@VTI7#ljsu!1[#_2?5uB;ffaQ2$Q4AT`C`aE,TTg2E1kP2$![WVZ8s^S4$e-@/rt$Gm^POS4.7*!&8>%DKGkD.SOo)![@[FWrT.g!Q$$^$9&Iqlh"?9
%:X8o:uW;o2)8>WEgX"Xcp^^*+/>H%V,!3Jb3Dfp"!8HQ3uWWiMoBkMR/1T3kH[K*X1@<?0;#QP,2!HTk\"(hN5[fEj&EcQ)B=TJdsAog=,!!'M/ZViL]@;]^4(dJ18JA_Ef^&XZsBl7K@!\smj!!,1k^An9?S3h%1@qu&M5\=VEC]FIN!1X,k:i^JaARnRA!!'h8^d;INBk+;T3ZW$a$c6i`6Npg!AnEn:!!(@G"$$I&6uYgS1jc)F
%:*\&H^!!(CHcp\M/!<<,J!74XO!-EL&AUskI70:p<W^h2GA7]h=#!WE8F!WOJ@q.P1e,V""9h60'!7qFm!1["s@P@dC%<FN@1^r@D!EH3G8/2-4irCSq7mogb4r>RH,6@k<0L,k/!4P-H!9,^58H>YG!(d/V!!iR#!(R#T!'pTN!7<!@!7Nl2#QW77):V^fciBL7iW.SfLbSn'!5UGkj"UP`2$=0b_G^Ho!7Ka?3s&1XdT6K;)b>99
%:"@WAf!bh_`!4Y/oe2%/[!4M91I/ns$,ln:]56j[a"ZZ[h3<2>Sd5<604TInXh<RW48HGnI$"X*.$DBN]5la1N5ldT9$+Do>5ldPX5leAW!58HI!58HI!58HI!58M&!58HI!5:5iiW+r>^As`(rr<$!#o,oS
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin /privrectpath1  { 4 -2 roll m dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath }bdf 
/rectfill{gsave newpath privrectpath1 fill grestore}def end
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop setcmykcolor}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1692 1584 2304 2376 } def			
/bleed 0 def			
/clpr {1692 1584 2304 2376 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1977 -1947 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
1977.6277 1997.482 m
1986.6277 1997.482 L
1986.6277 1961.482 L
1977.6277 1961.482 L
1977.6277 1997.482 L
f	
n
1990.8777 1961.482 m
1977.6277 1947.982 L
1977.6277 1961.482 L
1990.8777 1961.482 L
f	
n
1977.6277 1997.482 m
1990.8777 2010.982 L
1990.8777 1997.482 L
1977.6277 1997.482 L
f	
n
2013.6277 1965.982 m
2018.1277 1965.982 L
2018.1277 1961.482 L
2013.6277 1961.482 L
2013.6277 1965.982 L
f	
n
1986.6277 1997.482 m
2004.6277 1997.482 L
2009.1277 1992.982 L
1986.6277 1992.982 L
1986.6277 1997.482 L
f	
n
1986.6277 1965.982 m
2009.1277 1965.982 L
2004.6277 1961.482 L
1986.6277 1961.482 L
1986.6277 1965.982 L
f	
n
2004.6277 1979.482 m
2009.1277 1979.482 L
2009.1277 1965.982 L
2004.6277 1965.982 L
2004.6277 1979.482 L
f	
n
2000.1277 1988.482 m
2009.1277 1988.482 L
2009.1277 1983.982 L
2000.1277 1983.982 L
2000.1277 1988.482 L
f	
n
vmr
vmr
end
%%Trailer
