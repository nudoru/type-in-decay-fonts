%!PS-Adobe-2.0 EPSF-1.2
%%Title: UNTITLED-4
%%Creator: FreeHand 7.0
%%CreationDate: Wed Jun 11 11:29:50 1997 
%%BoundingBox: 0 0 60 54
%%FHPathName:E:\computek graphics\fonts\short circuit\UNTITLED-4
%ALDOriginalFile:E:\computek graphics\fonts\short circuit\UNTITLED-4
%ALDBoundingBox: -130 -360 482 432
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t=<u^::f"!!"C5!!3-(<,$2\ErZ1?!!iQH0fV'F#?3P-
%:!!![c!.Z[Z3&NBM3&1Il+>Gl60eP0\!&lbo0JkdI2DG13"TT-.@/p=LF@:%W<bZ,h6Y1.WAT@eO!!*3&$oBRj0KD$M1b^jD1BIOf5Qq-!\H5]>@;KKV!#>Pb!*fL(6sK^j!(?lc!*3"u?N<SV!'pSc!)NYd!(d/X3<<@b:B5/1B`LC!+>j-m!%e1-!&4I-!%\+o0`_7dD?+_XDuaeVDZFT<!)<N*2ZXHn0E=-6!!<3.GA1qklb?Xc
%:EbT\'!<`B&!!<3/A7]glEbTK7Bl@kh!(DDZ!!%6D!rr<l56_)f!nm](s5EtX#3#^[!_*8]"XjKN!!3-#MZMHE`r[Xh8H`Q(!!*'"!rr<%"6VB>6NIAk!teoH!#Yg!*WQ1%#Ye`;;[QE6@fl^]&2=2^:ddceCh6@MD)N"/!!WEh!)>`fEWBqV@5SMt!"W">FED4>:i9p>!Wi?,E,]>^!!#(f#;\@r!WXu12D>+23uC>-F*)>;!K]M(
%:;e'i&Lh1-[%Klb6!!tdiU&bDt$./rk!.("A3>;Gn3=%hi=Cu,b7WiT3#tYCr2ZXU7F9$D=!-1(("`RmhAQKrS!(@0T(BsjN:^R1A!WWT.!<<'R#m*1$!!aQq66bh_'*fn8:fRKHGMQ7!=T;f0!16'2!(6kg#L1(q9`Q47!!*'#2(;B57s+f>Bk1dEBkLCjE'=p8!!*'$0fFtZ!!!-%%>b+M-jBYZfaf2*<&kD457OR,!rrE`A2XVl
%:/j_E3@/sdp-p\Fi(`3u&&k0#;4:),j"#Bp/!!",K!$jE&8HK%q5lbBpE]5I<)ZTjF4T[Pk!!3WB!%%[G5l_C+&HE:d!#Ph=+oiYa*WRAa!(d4o+TNYc!#=Mr!#=c$!#>&+!#!?S(&7k1('F^>(,lt&"r7mT!#?OS!gj!+R/d4&1C/L2!#@'b!&6)A1]S(R!9RlN!B^>^bfhpE6i[5&!!!dLa\5>04TJH(!*fU+(.0\S!#B>P>A?!#
%:!#B[)!D%`o!rs*q!WW9;O\Z<"\H!oU!YuM=_#PiA"OqVsg]INlAIJVUnGiOj(D$Qq!%9W<&6*4cF@9\P@<HC."9:`0FE2F(!!<3,BOP^hFDl&o!GNJu"98P[1CXHe!WWFGFE2;8:B:Jm!WW@8Bl%Se!!E$P"'lZB!&"=X!A4?P/MTS)&4HUR!!"JK.0(Ij+$UN/BH9)a0`XiH!"&]31F`D*!\j]U)[6coS,`No3[f[^K`D)Q.Si/O
%:)[QKE8-+DEK`F+DH)^m="Z69k-VXdI!'gR'"uJOK1HPat?NpqBTDo*#3%tOt!egW.!'^ZY!!u1[#VZ=6!(?lH#3rs=08D/5"opVI"ueaN3F;t5rru=02E$6hK`F=As&Do*3!"^5K`FmQ0a^6.+V"]=56a26#!H;t+o_cHl:aE>%Q$G)!(?lP#"Sb\%>=e9!&"Ng5X,H;56aEJs'GsS0*VD(J5B#F#DE/#!)EeY!+,qa!-J8p#"?U\
%:"p(h@Bda-F.g;C^90Y$hCENUF4U4>;#=_u(J+b->#66YV>mH&`FT>,@2um4hK`H5q4[K?-!!*'#Lr;/j63'20D)MAL"ope[:1\WG9lj,n*ar\T0L6($!!*'k!)*Ab!WYH#0eG7-!#^k4!"V4f2*qLO!!"fJ*$e,t!!!uiaI,X,2#oH7;a26a"&VW06N@*L!usu9!!Pdm*,tru1BMrF",'ST!Z[%O%gk0!=C;I;!7Wq4%fcY2"2`7X
%:"`Q4(<'Ccl%KHuhJcGdG!)3G3!#[pq(B>3N'g2j:!f?sj!"f2B!!!No!=]#;4UMNZBa?*5!!bSK"TUhi4U;;nkq7r4.Q[bJ!%Iu`q"I`'JQ"97!<=QH!?k>@.8^(L&O/u5:c(%S5u:L%H%r_7OT>F_!&5?M?W/bB$99AK'[f&i<"8n*!<kJ,7TY.P!,"*"DZFn[D?+3/.528>!$qXK4+M6cA5$EWATDI<!!"Nf'JF5-f2b*\L!&5+
%:05D)$05I%\3GX[k4`;)hCCjc1-j27)6;T-[+okq6AOS\[!!$+$=#0ka!/U[UE+f7P:Q>GU!AOTV#mW>3h$9d&r`&q0J>40J<</rKCB-<p3PIfbWPN*N`s4P3ePuT3)QuR08-(mWW)Ede!':7,Ig8CB3s/"S6Na#=R0Q@d70#s_2#m[Xab2#YS5u:k-Q"FEf,+uRRn"<6[hoTE'0^eU#K[`*HN+4=!6%,870(N_Ak2qh_TYBF3BZMd
%:#8)n[AmSI;73=NY!([,\#r,?\70(N_,D9k<70(@LO[oL?"%ED^+#=-j!'Zl?!%^P=!!!<g)YF?NgZ\r,$n2D]'u\Bl#<iC1#JdtK6N]M9"MdD2MQK;IS#6Kc!5<=R3A_#S2[MT1"@W;J575bn2#ouG2*N.lJ`[2+!5$<F<<0EQG(9rk!AM5T#I?LB#;[:&<<+X6,Wu.[LI_G#K*OaG70'_AGY*Pn\_^7U!CHrY":2dq@G;#UD8OT^
%:!&Wfr70#pf21-,D^`WUWq$/d!i<R"JPm90l8-cpqCfT[d"%t2\6jPS#^gTB1/Ac9-3A_#[2[Or52a.@5!'i%l!!3-H.B$f(.4o/^.0r.AM#[Nn[bJ2=#Z2<m*j.[L9-1)p+%616ALU@sZ;3bD.DKdi!'E+f2#ouG6mG&$70'PL.7F6<Ua/D46mP2$p=E%B2#ouG9I$B.)a#CF3Z:]mUSK0/F<j9T6mVX/2#ouG9Hun,70'*)GMbS*
%:,c>,o6mP5)6mP2$:'<ES!W]7#,9Nju,9JLPo,haJ@;R52"LiFoZZ@5!UE@,J?ZR;X!(.hc!(Rkn*^^#u!4d.m[A+g5"@F8"!(.jn^GQ!Y"%!m.F!%]/+0;4ZWcK7N!(.hc!(-i]*nU6U"%<3kF!%W]+%?B#+%60)"Z68]!$`SaD'L,SDR+c`+)b("1$\f=!WW6$R6EoM8f9m(70%=@8NrdH1Y2jj3Bfk36Q\/c7i4l?6N]aW+'q!s
%:6"i[eEG.]A7KibC6Q\_s:'<ES6N]Xm=^!gL2HWdc^7ud_F!!gN6Qc4*2#ouG9--G&70(&C++IQf5"5ZB+%60)"Z68]!$`Sa;$M"b+"_N^*s;Rb;]fcT!<<'#!-+Yq[];K1S2$[*!1GX870&ofTL(B+TK,2$14)FiGJ-F"TJZ^>(e6G&6N]aW3s#XU!':9R!CHsV1.2":9*.N^9*7$O!WXSbW-'I)/U$k*G?5Vr!!*%Kp\t9p3,9?`
%:G8O&45nufg3>>bW3>Fgp7C>&j#>MQo!)9m#G;T@k!D&/:"%<2O!]usO#<N#Y!CHsV2],0h70*!H9*7$O!WXSbW-Ka-/UI..HWM%u!!*'!!W]C'G8O.20u,Lu70#HR#=SX0@51_90uPe$;Vgdr0gu(D0ekNc9GUbc0gc%3!':5e70#CO8-)'[^Jm8"#>5+e!)!DO!!3-J(oVj1(bL42(k5U(BE/t9!<<'#!-]8M2]0Xq(e"E\e6Spl
%:AHtX(b@_Ybc/(Ar0k^e`2]+s`:,a"I!)+/)2]+ma70#CN#Q+0_!':9R!CHrDBEq0370#s_2#m[X-Q&e5-Q"Fef,,'7#QTKY(hWgKs8N-#H\#!P^nicZ70'@U0`;5F!2j8!<&ij95qtHP70$CJ^bl*c(0U%^2WR4-70'5?Tg\sV@A-$j7KcdVj@'&D">p0H"1G7))OrOU70&u8Tg\sMCOo,;gmC0S:-R`-!<'E%)`7U_"%aY'dHWL0
%:"%<3Y4+Tg#Sme<["%EDb@G>`D#=SVf">p/Z$31D5$3C2.!/(?&!!!"H!-eKc!,qpS!,)@C!+=;A!WXGgW.lN?/VhduL]EM:!+l32s8N'!6%o:@!!<3'!&+BQ.KCmt/H>bR^b,UU!/aVT,61"2!WWHHJF3Z0!K-pX#:G$u#=gcX!"&]-P8B-]-49f=L][YXW:g2j!!*6'W:^-Z"U"f8!!5i&H"D"bA8--QDes?4!!!&968J[S"K5Y-
%:!fd8?!070]#$V.f!*0(k"9SY2!!WEn!-J9U0cag_O9koM"T\T&e7\m`7g'/`":>21!<A;p!!)HlPl^ph!!!#fs8N(`!0I6h!!#Xo5l^mD";(V6mfP9WQ9YEM"9;4"QN."G"98Ti&OHJ+!+Q!tj_HmPEWC#@$Z8*8#68089aUk#7h;*k!.btM%fcP/RfJmY#7:G62$<p[X8ne#!!&DeQ;JP*!!>(_7f[Q0AH69Ab^MSP3te.c+<>#0
%:?ijmC#67Bs!,2E5!(%e.!)4/'W#.;m@5.js2Zj-^U&Y.C!<?a6"oo2470!<j!'(<A2$*bF"'I\eCcaLm!-^F-UB1DPK)bmA!Wk:f!<>[k71_`b!<<6&#67IU&4He#hekG7@/p90!2W*f0`XiJ!B1.F$8DP_!&Xb6=&/rd!-pR,DEe0"!'^VdO!Fe1#lt#`!Up+O!B1WY(BFN0!2omp!2KUh!2'StFC>CZ!)EXr!!54g"5OqQbuY>,
%:'EJ46s4(-N!9;7V!/1CS!**#!<tL&cK`EeN.]QSO!JLMr!5J++!3/!Z!<@fRK`G$R;AV+kK`G*Q!<?,"BE3_dr543g1(GrD#='X>!143!!2p>D!!*'!WiJi%K`M'9K`D,R9c3s3K`Hf,!&k1`X$R.d!egVC!#Yb:+pnl&8H8_T2[DtYK`FOA7^<'qC8sT-!!"6<i:gd_Z!Co@!!):D!<E0h!)!CYWrN+0=[,X_!,=In7kLuOp5_`'
%:C'c-ZAH4k$8Hif49*0qTb==N="p"]'!WW9V!Cmh.:c\RU.P_?,(khtG^L[BH!$DCEK`Hf,!(-j%&h5^O8/#P73!BKd/-Z,d^B+B87KWVj/-\*@#6:7u$+1t1&;:+<!!!"4!.Y$!3"/:jK`F^[=tB^T3\1=4K`D)Q=9(,YK`Hf,!!%NJ!^Rh,!/1E,!!!!T!`g4n!/1CQ!&sr[!/1E,!!*&i<s_4r7gaqM70!;f5QLlcK`Hf,ICn3t
%:G<Z-/s8N-#!rr0Q!DFPM.Y\"Y!/1CQ!,)A0&<-Yj!.kN2!/1CQ!<8ER!^[3I!/1CQ!([(j!/1E,!!!?_8o//@!3cG=!3ZC*!3H7&!36*B0*"Hc5l^m<p&Gs1!"/c,3bWtE70,[S5l``a3-5-d!!!!-s'Ga+6NKIQ5la1N5ldkd0*)=Y?Npc9!)3M\!&,Mq!<2R`5t_2D!+>q!!'pTN!!$@39*Irg5l^lb5m0s``ILG\5l^lb/TKBV
%:8,rVs57WY_])]DB\H',>#QV=6[K*]8ZiIE4Z98R(!)e]L3+uq)Bfpof=DW(>!,k&;!s$":&N`%7<(@)qs8N'!Ba"_A7WVWdU1l;qAH2]4!,l8["93EE!2BWd!'pT>!"(hLAI5"0^]5W.$37dK!5UAj]E#2:W;rMGGZ?G`;(Q)T:^@&?!WYRo_>m@j"p"]@!!*&ufJWs7:,rVH&.AO?A,lT33<B<`+TML5!Wfh5>al?+!(e12oj@5!
%:!!+VN!'gNH&tOVP)?9a;,66a(!WW0hBl%?h@VfTU?iVE9SMU`U9gi]*F9#6<!!,>M!#GV8"TSQt9PJQi!!..I0`a,'0ED6k;fm%oDJ([>!<H\()@&u3@;SdQ#8dFk!!-,?">U*J"e#Dp;$6k!RfEHh(e.%aDdu=L@:Wqi1BdbDF(8^ITF#4HC]e8OF$i<97L>S?#B3IJC1Y=c3=,ZcTE(K]U,E!:!)mqr"u33Q!2(&,;fHYlR?@MO
%:UGb(8Ai0Sh!2fge6t(0C!+>k$!-npO!1ZJoASl!rF8uR@5UoHKErmQd!&QK#!ETUe%n8BQW;o2)7DNsE!3H7%0F)DX#@"0!2FDD"E,Te!J8'+::gnH1m/Sk#X[dDMF`7>2@nd'3!3/M&B6A5RWD*K'!4,W+3Wocq!HTk\"(hO,.m\2rDg,=bAog=+/40C;\,`j52$RK,B/LPl"(hN5^&SRlS4mX78d7ls!!+ba^AscjCi<f,>D*$B
%:!,DQ?5\=VEC]FIN!1Zl+De!?d'kC)F!!'h8^d;INBk'=JCiBj#Dun0R6Npg!AnF%?!!(@G"$$I&9JmnA,peQP!!(CHcq+h4!<<,J!74YdH#.&C!C.5^70:p<W^h2GA7]gH$$1/60a]&=@q.P1e,V""9hZK,!7q4@<+07Q*&%@R%<DLMF#4<b!!-)m,sMu%.4[[l>=V(ND_`4W!@%XG__aXa5l`V>i\:F)!-@1u2#p2J5l_/ji>eUU
%::B3lb5la1N5lf:4do?E_!<H'L!9+!P!5UGkj"UP`3s,`g_G^F<p#5u"!7<hq#<N!@!/1E,!/1Eh<rrO_"&UPq1*>"&1'dm,3P!N;:B]*)!9-'D#l"<Q!)3Z1#"\pK4TU6:K`Hf,K`Hf,K`Hf,K`FOA"]]:;B*>@p#e2r$TN;E#4U+Oh"Z$1\1BGn(mP-9PFT@jj!MMdZ5la1N5l`bL[m)6+!'pUo^B?\"^,enQ!'pTN!'pUa.N[jV
%:".B5)!1O#hqoSdb
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin /privrectpath1  { 4 -2 roll m dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath }bdf 
/rectfill{gsave newpath privrectpath1 fill grestore}def end
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop setcmykcolor}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1692 1584 2304 2376 } def			
/bleed 0 def			
/clpr {1692 1584 2304 2376 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1822 -1944 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
1822.5036 1997.7554 m
1831.5012 1997.7554 L
1831.5012 1944 L
1822.5036 1944 L
1822.5036 1997.7554 L
f	
n
1872.4859 1957.4805 m
1872.4859 1959.8414 1874.3999 1961.7554 1876.7609 1961.7554 C
1879.122 1961.7554 1881.0359 1959.8415 1881.0359 1957.4805 C
1881.0359 1955.1194 1879.1219 1953.2055 1876.7609 1953.2055 C
1872.4859 1953.2055 1872.0182 1952.7824 1872.0182 1948.5074 C
1872.0182 1946.1463 1870.1042 1944.2324 1867.7432 1944.2324 C
1865.3822 1944.2324 1863.4682 1946.1464 1863.4682 1948.5074 C
1863.4682 1950.8685 1865.3822 1952.7824 1867.7432 1952.7824 C
1872.0182 1952.7824 1872.4859 1953.2055 1872.4859 1957.4805 C
h
1863.4682 1993.4804 m
1863.4682 1995.8415 1865.3822 1997.7554 1867.7432 1997.7554 C
1870.1042 1997.7554 1872.0182 1995.8415 1872.0182 1993.4804 C
1872.0182 1991.1194 1870.1042 1989.2055 1867.7432 1989.2055 C
1865.3822 1989.2055 1863.4682 1991.1194 1863.4682 1993.4804 C
h
1872.4682 1984.4804 m
1872.4682 1986.8415 1874.3822 1988.7554 1876.7432 1988.7554 C
1879.1042 1988.7554 1881.0182 1986.8415 1881.0182 1984.4804 C
1881.0182 1982.1194 1879.1042 1980.2055 1876.7432 1980.2055 C
1874.3822 1980.2055 1872.4682 1982.1194 1872.4682 1984.4804 C
h
1845.4682 1948.4804 m
1845.4682 1950.8415 1847.3822 1952.7554 1849.7432 1952.7554 C
1852.1042 1952.7554 1854.0182 1950.8415 1854.0182 1948.4804 C
1854.0182 1946.1194 1852.1042 1944.2055 1849.7432 1944.2055 C
1847.3822 1944.2055 1845.4682 1946.1194 1845.4682 1948.4804 C
h
1854.4682 1948.4804 m
1854.4682 1950.8415 1856.3822 1952.7554 1858.7432 1952.7554 C
1861.1042 1952.7554 1863.0182 1950.8415 1863.0182 1948.4804 C
1863.0182 1946.1194 1861.1042 1944.2055 1858.7432 1944.2055 C
1856.3822 1944.2055 1854.4682 1946.1194 1854.4682 1948.4804 C
h
1845.4859 1993.4805 m
1845.4859 1995.8414 1847.3999 1997.7554 1849.7609 1997.7554 C
1852.122 1997.7554 1854.0359 1995.8415 1854.0359 1993.4805 C
1854.0359 1991.1194 1852.1219 1989.2055 1849.7609 1989.2055 C
1845.4859 1989.2055 1845.0182 1988.7824 1845.0182 1984.5074 C
1845.0182 1982.1463 1843.1042 1980.2324 1840.7432 1980.2324 C
1838.3822 1980.2324 1836.4682 1982.1464 1836.4682 1984.5074 C
1836.4682 1986.8685 1838.3822 1988.7824 1840.7432 1988.7824 C
1845.0182 1988.7824 1845.4859 1989.2055 1845.4859 1993.4805 C
h
1845.4859 1975.4805 m
1845.4859 1977.8414 1847.3999 1979.7554 1849.7609 1979.7554 C
1852.122 1979.7554 1854.0359 1977.8415 1854.0359 1975.4805 C
1854.0359 1973.1194 1852.1219 1971.2055 1849.7609 1971.2055 C
1845.4859 1971.2055 1845.0182 1970.7824 1845.0182 1966.5074 C
1845.0182 1964.1463 1843.1042 1962.2324 1840.7432 1962.2324 C
1838.3822 1962.2324 1836.4682 1964.1464 1836.4682 1966.5074 C
1836.4682 1968.8685 1838.3822 1970.7824 1840.7432 1970.7824 C
1845.0182 1970.7824 1845.4859 1971.2055 1845.4859 1975.4805 C
h
1845.4859 1966.4805 m
1845.4859 1968.8414 1847.3999 1970.7554 1849.7609 1970.7554 C
1852.122 1970.7554 1854.0359 1968.8415 1854.0359 1966.4805 C
1854.0359 1964.1194 1852.1219 1962.2055 1849.7609 1962.2055 C
1845.4859 1962.2055 1845.0182 1961.7824 1845.0182 1957.5074 C
1845.0182 1955.1463 1843.1042 1953.2324 1840.7432 1953.2324 C
1838.3822 1953.2324 1836.4682 1955.1464 1836.4682 1957.5074 C
1836.4682 1959.8685 1838.3822 1961.7824 1840.7432 1961.7824 C
1845.0182 1961.7824 1845.4859 1962.2055 1845.4859 1966.4805 C
h
1854.4859 1993.4805 m
1854.4859 1995.8414 1856.3999 1997.7554 1858.7609 1997.7554 C
1861.122 1997.7554 1863.0359 1995.8415 1863.0359 1993.4805 C
1863.0359 1991.1194 1861.1219 1989.2055 1858.7609 1989.2055 C
1854.6061 1989.2055 1854.0475 1988.8059 1854.0194 1984.859 C
1854.0303 1984.7343 1854.0359 1984.608 1854.0359 1984.4805 C
1854.0359 1982.1194 1852.1219 1980.2055 1849.7609 1980.2055 C
1845.4859 1980.2055 1845.0182 1979.7824 1845.0182 1975.5074 C
1845.0182 1973.1463 1843.1042 1971.2324 1840.7432 1971.2324 C
1838.3822 1971.2324 1836.4682 1973.1464 1836.4682 1975.5074 C
1836.4682 1977.8685 1838.3822 1979.7824 1840.7432 1979.7824 C
1844.898 1979.7824 1845.4566 1980.182 1845.4847 1984.1288 C
1845.4738 1984.2535 1845.4682 1984.3798 1845.4682 1984.5074 C
1845.4682 1986.8685 1847.3822 1988.7824 1849.7432 1988.7824 C
1854.0182 1988.7824 1854.4859 1989.2055 1854.4859 1993.4805 C
h
1845.4682 1957.4804 m
1845.4682 1959.8415 1847.3822 1961.7554 1849.7432 1961.7554 C
1852.1042 1961.7554 1854.0182 1959.8415 1854.0182 1957.4804 C
1854.0182 1955.1194 1852.1042 1953.2055 1849.7432 1953.2055 C
1847.3822 1953.2055 1845.4682 1955.1194 1845.4682 1957.4804 C
f	
n
vmr
vmr
end
%%Trailer
